{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\App-Food\\\\frontend\\\\src\\\\components\\\\Product.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"./Rating\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product(props) {\n  _s();\n\n  const {\n    product\n  } = props;\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      cartItems\n    }\n  } = state;\n\n  const addToCartHandler = async item => {\n    const existItem = cartItems.find(x => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const {\n      data\n    } = await axios.get(`/api/products/${item._id}`);\n\n    if (data.countInStock < quantity) {\n      window.alert(\"Sorry. Product is out of stock\");\n      return;\n    }\n\n    ctxDispatch({\n      type: \"CART_ADD_ITEM\",\n      payload: { ...item,\n        quantity\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/product/${product.slug}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoomin card-img-top\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image // className=\"card-img-top\"\n          ,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/product/${product.slug}`,\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"product-title\",\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        rating: product.rating,\n        numReviews: product.numReviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-box\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"product-price\",\n          children: [\"$\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), product.countInStock === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-add\",\n          variant: \"light\",\n          disabled: true,\n          children: \"Out of stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-add\",\n          onClick: () => addToCartHandler(product),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"XDbruNh/h18/KyvLzI/kuU/R8wE=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["D:/Project/App-Food/frontend/src/components/Product.js"],"names":["Card","Button","Link","Rating","axios","useContext","Store","Product","props","product","state","dispatch","ctxDispatch","cart","cartItems","addToCartHandler","item","existItem","find","x","_id","quantity","data","get","countInStock","window","alert","type","payload","slug","image","name","rating","numReviews","price"],"mappings":"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","sourcesContent":["import Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"./Rating\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Store } from \"../Store\";\r\n\r\nfunction Product(props) {\r\n  const { product } = props;\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { cartItems },\r\n  } = state;\r\n\r\n  const addToCartHandler = async (item) => {\r\n    const existItem = cartItems.find((x) => x._id === product._id);\r\n    const quantity = existItem ? existItem.quantity + 1 : 1;\r\n    const { data } = await axios.get(`/api/products/${item._id}`);\r\n    if (data.countInStock < quantity) {\r\n      window.alert(\"Sorry. Product is out of stock\");\r\n      return;\r\n    }\r\n    ctxDispatch({\r\n      type: \"CART_ADD_ITEM\",\r\n      payload: { ...item, quantity },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Link to={`/product/${product.slug}`}>\r\n        <div className=\"zoomin card-img-top\">\r\n          <img\r\n            src={product.image}\r\n            // className=\"card-img-top\"\r\n            alt={product.name}\r\n          />\r\n        </div>\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product.slug}`}>\r\n          <Card.Title className=\"product-title\">{product.name}</Card.Title>\r\n        </Link>\r\n        <Rating rating={product.rating} numReviews={product.numReviews} />\r\n        <div className=\"product-box\">\r\n          <Card.Text className=\"product-price\">${product.price}</Card.Text>\r\n          {product.countInStock === 0 ? (\r\n            <Button className=\"btn-add\" variant=\"light\" disabled>\r\n              Out of stock\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              className=\"btn-add\"\r\n              onClick={() => addToCartHandler(product)}\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default Product;\r\n"]},"metadata":{},"sourceType":"module"}