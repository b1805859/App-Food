{"ast":null,"code":"var _jsxFileName = \"/Users/forly/App-Food/frontend/src/screens/SigninScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigninScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get(\"redirect\");\n  const redirect = redirectInUrl ? redirectInUrl : \"/\";\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await Axios.post(\"/api/users/signin\", {\n        email,\n        password\n      });\n      ctxDispatch({\n        type: \"USER_SIGNIN\",\n        payload: data\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      navigate(redirect || \"/\");\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3 signin-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"signin-subtitle\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"signin-input\",\n            type: \"email\",\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"signin-subtitle\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"signin-input\",\n            type: \"password\",\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-signin\",\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 signin-smalltext\",\n          children: [\"New customer?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"signin-link\",\n            to: `/signup?redirect=${redirect}`,\n            children: \"Create your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SigninScreen, \"LREBMlbIElNUHEKtI5VPof7/35A=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"sources":["/Users/forly/App-Food/frontend/src/screens/SigninScreen.js"],"names":["Axios","Link","useLocation","useNavigate","Container","Form","Button","Helmet","useContext","useEffect","useState","Store","toast","getError","SigninScreen","navigate","search","redirectInUrl","URLSearchParams","get","redirect","email","setEmail","password","setPassword","state","dispatch","ctxDispatch","userInfo","submitHandler","e","preventDefault","data","post","type","payload","localStorage","setItem","JSON","stringify","err","error","target","value"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../utils\";\n\nexport default function SigninScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get(\"redirect\");\n  const redirect = redirectInUrl ? redirectInUrl : \"/\";\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await Axios.post(\"/api/users/signin\", {\n        email,\n        password,\n      });\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      navigate(redirect || \"/\");\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <div className=\"signin-card\">\n        <h1 className=\"my-3 signin-title\">Sign In</h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"email\">\n            <Form.Label className=\"signin-subtitle\">Email</Form.Label>\n            <Form.Control\n              className=\"signin-input\"\n              type=\"email\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label className=\"signin-subtitle\">Password</Form.Label>\n            <Form.Control\n              className=\"signin-input\"\n              type=\"password\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <div className=\"mb-3\">\n            <Button className=\"btn-signin\" type=\"submit\">\n              Sign In\n            </Button>\n          </div>\n          <div className=\"mb-3 signin-smalltext\">\n            New customer?{\" \"}\n            <Link className=\"signin-link\" to={`/signup?redirect=${redirect}`}>Create your account</Link>\n          </div>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}